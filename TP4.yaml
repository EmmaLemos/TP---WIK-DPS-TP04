# apiVersion: v1
# kind: Pod
# metadata:
#   name: echoserver
# spec:
#   containers:
#   - name: echoserver
#     image: registry.cluster.wik.cloud/public/echo #image créer lors du TP 2
#     ports:
#     - containerPort: 8080

# ---

# apiVersion: apps/v1 #Remplacement du Pod par un ReplicatSet afin de déployer 4 réplicas du Pod crée précédement
# kind: ReplicaSet
# metadata:
#   name: echoserver
#   labels:
#     app: echo
# spec:
#   replicas: 4
#   selector:
#     matchLabels:
#       wik-dps: tp4
#   template:
#     metadata:
#       labels:
#         wik-dps: tp4
#     spec:
#       containers:
#       - name: echoserver
#         image: registry.cluster.wik.cloud/public/echo
#         ports:
#         - containerPort: 8080

# ---

apiVersion: apps/v1 #remplacer le ReplicatSet par un Deployment afin de pouvoir définir une stratégie d'update
kind: Deployment
metadata:
  name: echoserver
  labels:
    app: echoserver
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  selector:
    matchLabels:
      wik-dps : tp4
  template:
    metadata:
      labels:
        wik-dps : tp4
    spec:
      containers:
      - name: echoserver
        image: registry.cluster.wik.cloud/public/echo
        ports:
        - containerPort: 8080
---
#service
apiVersion: v1
kind: Service
metadata:
  name: echo-service
spec:
  selector:
    wik-dps: tp4
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: jenesaispas.fr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echo-service
            port:
              number: 8080